{'id': '822345754', 'type': 'page', 'status': 'current', 'title': 'Access Control List (Dictionary Entry)', 'macroRenderedOutput': {}, 'body': {'storage': {'value': '<h1 style="text-align: center;"><strong><span style="color: rgb(76,154,255);">Access Control List</span></strong></h1><h2>Alternate Forms</h2><ul><li><p>Ackle <code>Prononciation</code></p></li><li><p>ACL <code>Acronym</code></p></li></ul><h2>Definitions</h2><h3>Definition 1</h3><p>A digital representation listing the principals that have access to a resource and the operations that they are authorized to execute on it. </p><p>It is used by the <em>reference monitor</em> to allow or deny access requests to the resource.</p><p>It is a <em>discretionary access control </em>mechanism, i.e. authorized users such as <em>resource owners </em>have the possibility to modify it, effectively granting and revoking access permissions.</p><p>It is linked to (and sometimes embedded in) the resource. This may be an advantage as it provides flexibility with an <em>access granularity level</em> set at the individual resource. This may be a disadvantage as managing ACLs at scale becomes inefficient, function of the number of <em>resources</em>, the number of <em>principals </em>and the <em>stability of access decision factors</em>.</p><p>It may be considered as resource metadata.</p><h2>Related Terms</h2><ul><li><p><ac:link ac:card-appearance="inline"><ri:page ri:content-title="Access (Dictionary Entry)" ri:version-at-save="7" /><ac:link-body>Access (Dictionary Entry)</ac:link-body></ac:link> </p></li><li><p><ac:link ac:card-appearance="inline"><ri:page ri:content-title="Access Control (Dictionary Entry)" ri:version-at-save="1" /><ac:link-body>Access Control (Dictionary Entry)</ac:link-body></ac:link> </p></li><li><p><ac:link ac:card-appearance="inline"><ri:page ri:content-title="Access Granularity (Dictionary Entry)" ri:version-at-save="10" /><ac:link-body>Access Granularity (Dictionary Entry)</ac:link-body></ac:link> </p></li><li><p><ac:link ac:card-appearance="inline"><ri:page ri:content-title="AWS ACL (Dictionary Entry)" ri:version-at-save="3" /><ac:link-body>AWS ACL (Dictionary Entry)</ac:link-body></ac:link> <code>Product-specific Implementation</code></p></li><li><p>Discretionary Access Control <code>Generic Form</code></p></li><li><p>Linux ACL</p></li><li><p>Resource</p></li><li><p><ac:link ac:card-appearance="inline"><ri:page ri:content-title="Stability of Access Decision Factors (Dictionary Entry)" ri:version-at-save="4" /><ac:link-body>Stability of Access Decision Factors (Dictionary Entry)</ac:link-body></ac:link> </p></li><li><p>Windows ACL</p></li></ul><h2>Quotes</h2><blockquote><p><strong>Access Control List (ACL). </strong>The access matrix is implemented through a set of lists, one for each object (i.e., the columns of the matrix) in the system. The list associated with an object has an element for each subject holding a privilege on the object. This element contains the set of privileges the subject can exercise on the object. This is the way usually adopted by modern operating systems.</p></blockquote><p style="text-align: right;">(<ac:link ac:card-appearance="inline"><ri:page ri:space-key="BIB" ri:content-title="Ferrari, 2010" ri:version-at-save="2" /><ac:link-body>Ferrari, 2010</ac:link-body></ac:link>, p. 12)</p><blockquote><p><strong>4.2.2 Access Control Lists</strong></p><p>Another way of simplifying the management of access rights is to store the access control matrix a column at a time, along with the resource to which the column refers. This is called an access control list or ACL (pronounced &lsquo;ackle&rsquo;). In the first of our above examples, the ACL for file 3 (the account file) might look as shown here in Figure 4.4.</p><p>ACLs have a number of advantages and disadvantages as a means of managing security state. These can be divided into general properties of ACLs, and specific properties of particular implementations.</p><p>ACLs are a natural choice in environments where users manage their own file security, and became widespread in the Unix systems common in universities and science labs from the 1970s. They are the basic access control mechanism in Unix-based systems such as GNU/Linux and Apple&rsquo;s OS/X; the access controls in Windows are also based on ACLs, but have become more complex over time. Where access control policy is set centrally, ACLs are suited to environments where protection is data-oriented; they are less suited where the user population is large and constantly changing, or where users want to be able to delegate their authority to run a particular program to another user for some set period of time. ACLs are simple to implement, but are not efficient as a means of doing security checking at runtime, as the typical operating system knows which user is running a particular program, rather than what files it has been authorized to access since it was invoked. The operating system must either check the ACL at each file access, or keep track of the active access rights in some other way.</p><p>Finally, distributing the access rules into ACLs means that it can be tedious to find all the files to which a user has access. Revoking the access of an employee who has just been fired will usually have to be done by cancelling their password or other authentication mechanism. It may also be tedious to run system-wide checks; for example, verifying that no files have been left world-writable could involve checking ACLs on millions of user files.</p></blockquote><p style="text-align: right;">(<ac:link ac:card-appearance="inline"><ri:page ri:space-key="BIB" ri:content-title="Anderson, 2008" ri:version-at-save="3" /><ac:link-body>Anderson, 2008</ac:link-body></ac:link>, p. 99)</p><blockquote><p><strong>Access control list</strong></p><p>A list of principals that are authorized to have access to some object.</p></blockquote><p style="text-align: right;">(<ac:link ac:card-appearance="inline"><ri:page ri:space-key="BIB" ri:content-title="Saltzer and Schroeder, 1975" ri:version-at-save="2" /><ac:link-body>Saltzer and Schroeder, 1975</ac:link-body></ac:link>, p. 1)</p><h2>Bibliography</h2><ul><li><p><ac:link ac:card-appearance="inline"><ri:page ri:space-key="BIB" ri:content-title="Saltzer and Schroeder, 1975" ri:version-at-save="2" /><ac:link-body>Saltzer and Schroeder, 1975</ac:link-body></ac:link> </p></li></ul><h2>See Also</h2><ac:structured-macro ac:name="contentbylabel" ac:schema-version="4" data-layout="default" ac:macro-id="5b902ef0-aeaf-41c6-ab51-97e02888af81"><ac:parameter ac:name="showLabels">false</ac:parameter><ac:parameter ac:name="max">50</ac:parameter><ac:parameter ac:name="sort">title</ac:parameter><ac:parameter ac:name="cql">label = &quot;access-control-list&quot;</ac:parameter></ac:structured-macro>', 'representation': 'storage', 'embeddedContent': [], '_expandable': {'content': '/rest/api/content/822345754'}}, '_expandable': {'editor': '', 'atlas_doc_format': '', 'view': '', 'export_view': '', 'styled_view': '', 'dynamic': '', 'editor2': '', 'anonymous_export_view': ''}}, 'extensions': {'position': 213117477}, '_expandable': {'childTypes': '', 'container': '/rest/api/space/DIC', 'metadata': '', 'operations': '', 'schedulePublishDate': '', 'children': '/rest/api/content/822345754/child', 'restrictions': '/rest/api/content/822345754/restriction/byOperation', 'history': '/rest/api/content/822345754/history', 'ancestors': '', 'version': '', 'descendants': '/rest/api/content/822345754/descendant', 'space': '/rest/api/space/DIC'}, '_links': {'editui': '/pages/resumedraft.action?draftId=822345754', 'webui': '/spaces/DIC/pages/822345754', 'context': '/wiki', 'self': 'https://open-measure.atlassian.net/wiki/rest/api/content/822345754', 'tinyui': '/x/GgAEMQ', 'collection': '/rest/api/content', 'base': 'https://open-measure.atlassian.net/wiki'}}