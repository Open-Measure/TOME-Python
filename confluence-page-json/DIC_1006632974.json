{'id': '1006632974', 'type': 'page', 'status': 'current', 'title': 'Access Granularity (Dictionary Entry)', 'macroRenderedOutput': {}, 'body': {'storage': {'value': '<h1 style="text-align: center;"><strong><span style="color: rgb(76,154,255);">Access Granularity</span></strong></h1><h2>Definitions</h2><h3>Definition 1</h3><p>Access granularity designates the scale or precision level(s) at which access control is supported by a system.</p><p>A system that supports finer grained access controls may provide more configurational flexibility but may require higher maintenance costs, unless it provides efficient mechanisms to simplify and automate access management. Conversely, a system that supports coarser grained access controls may provide less configurational flexibility but may require lower maintenance costs.</p><p>A system may simultaneously support multiple access granularity levels. When loosely speaking about the granularity of a system, the intention is often to get a sense of the flexibility provided by a system and thus the smallest level is generally implied.</p><h4>Examples</h4><ul><li><p>a file server may support file-level ACLs as its smallest access granularity.</p></li><li><p>a relational database management system may support database-level, table-level, row-level and field-level access granularities.</p></li><li><p>a business application may implement complex policy-based access control mechanisms that resolve in a matrix of record and operation access granularity levels where both record and operation accesses are required to gain access.</p></li></ul><h2>Related Terms</h2><ul><li><p>Access</p></li><li><p>Authorization</p></li><li><p>Coarse-Grained Access Controls</p></li><li><p>Fine-grained Access Controls</p></li><li><p>Information Asset</p></li><li><p>Information Asset Granularity</p></li></ul><h2>Quotes</h2><blockquote><p><em>Degree of Granularity </em>&ndash; Typically, more simplistic structures such as ACLs or IBAC may be adequate when coarse access decisions are needed, such as the ability to gain access to an enterprise based on membership in an organization. On the other hand, implementing fine-grained controls may be more suitable for granting access to information, where many factors may have to be considered to implement formal release policies established for each information object requested. Here an ABAC or PBAC structure may be more suitable.</p></blockquote><p style="text-align: right;">(<ac:link ac:card-appearance="inline"><ri:page ri:space-key="BIB" ri:content-title="Farroha and Farroha, 2012" ri:version-at-save="2" /><ac:link-body>Farroha and Farroha, 2012</ac:link-body></ac:link>, p. 3)</p><blockquote><p>Access granularity defines the storage unit to control data access &ndash; e.g., at the tuple, tables or databases levels.</p></blockquote><p style="text-align: right;">(<ac:link ac:card-appearance="inline"><ri:page ri:space-key="BIB" ri:content-title="Sasaoka and Medeiros, 2006" ri:version-at-save="2" /><ac:link-body>Sasaoka and Medeiros, 2006</ac:link-body></ac:link>, p. 111)</p><blockquote><p><strong>6.1.3 The degree to which an access control system supports the concept of least privilege</strong></p><p>In addition to an access control mechanism&rsquo;s reference mediation function, there are two other basic functions: a function to create subjects and associate these subjects with their users, and a function to associate a subject with a subset of attributes that are assigned to its user. Regardless of its implementation and the type of attributes that are deployed, reference mediation of an access control system constrains the subject and user&rsquo;s requests to the capabilities that are associated with a subject&rsquo;s attributes. Although a number of access control mechanisms associate a subject with each and every user attribute, in order for an access control mechanism to support the principle of least privilege, constraints must be placed on the attributes that are associated with a subject to further reduce the permissible capabilities. The organization specific least- privilege policy is described by specifying the rules composed by the basic access control elements: subjects, operations, and objects. The access control systems provide various specifying methods, which achieve different degrees of granularity, flexibility, and scope, and different groupings of the controlled resources for the least-privilege policies.</p></blockquote><p style="text-align: right;">(<ac:link ac:card-appearance="inline"><ri:page ri:space-key="BIB" ri:content-title="NIST IR 7316, 2006" ri:version-at-save="4" /><ac:link-body>NIST IR 7316, 2006</ac:link-body></ac:link>, p. 37)</p><blockquote><p><strong>4.2.7 Granularity</strong></p><p>A practical problem with all current flavors of access control system is granularity. As the operating system works with files, this will usually be the smallest object with which its access control mechanisms can deal. So it will be application-level mechanisms that, for example, ensure that a bank customer at a cash machine can see his or her own balance but not anybody else&rsquo;s.</p><p>But it goes deeper than that. Many applications are built using database tools that give rise to some problems that are much the same whether running DB2 on MVS or Oracle on Unix. All the application data is bundled together in one file, and the operating system must either grant or deny a user access to the lot. So, if you developed your branch accounting system under a database product, then you&rsquo;ll probably have to manage one access mechanism at the operating system level and another at the database or application level. Many real problems result. For example, the administration of the operating system and the database system may be performed by different departments, which do not talk to each other; and often user pressure drives IT departments to put in crude hacks that make the various access control systems seem to work as one, but that open up serious holes. </p><p>Another granularity problem is single sign-on. Despite the best efforts of computer managers, most large companies accumulate systems of many different architectures, so users get more and more logons to different systems; consequently, the cost of administering them escalates. Many organizations want to give each employee a single logon to all the machines on the network. A crude solution is to endow their PCs with a menu of hosts to which a logon is allowed, and hide the necessary userids and passwords in scripts. More sophisticated solutions may involve a single security server through which all logons must pass, or a smartcard to do multiple authentication protocols for different systems. Such solutions are hard to engineer properly. Whichever route one takes, the security of the best system can easily be reduced to that of the worst.</p></blockquote><p style="text-align: right;">(<ac:link ac:card-appearance="inline"><ri:page ri:space-key="BIB" ri:content-title="Anderson, 2001" ri:version-at-save="2" /><ac:link-body>Anderson, 2001</ac:link-body></ac:link>,p. 60-61)</p><blockquote><p>An operation represents a unit of control that can be referenced by an individual role that is subject to regulatory constraints within the RBAC framework. It is important to note the difference between a simple mode of access and an operation. An operation can be used to capture security-relevant details or constraints that cannot be determined by a simple mode of access[2]. These details can be in terms of both method and granularity of access.</p></blockquote><p style="text-align: right;">(<ac:link ac:card-appearance="inline"><ri:page ri:space-key="BIB" ri:content-title="Ferraiolo, 1995" ri:version-at-save="2" /><ac:link-body>Ferraiolo, 1995</ac:link-body></ac:link>, p. 3)</p><h2>Bibliography</h2><ul><li><p><ac:link ac:card-appearance="inline"><ri:page ri:space-key="BIB" ri:content-title="Anderson, 2001" ri:version-at-save="2" /><ac:link-body>Anderson, 2001</ac:link-body></ac:link> </p></li><li><p><ac:link ac:card-appearance="inline"><ri:page ri:space-key="BIB" ri:content-title="Farroha and Farroha, 2012" ri:version-at-save="2" /><ac:link-body>Farroha and Farroha, 2012</ac:link-body></ac:link> </p></li><li><p><ac:link ac:card-appearance="inline"><ri:page ri:space-key="BIB" ri:content-title="Ferraiolo, 1995" ri:version-at-save="2" /><ac:link-body>Ferraiolo, 1995</ac:link-body></ac:link> </p></li><li><p><ac:link ac:card-appearance="inline"><ri:page ri:space-key="BIB" ri:content-title="NIST IR 7316, 2006" ri:version-at-save="4" /><ac:link-body>NIST IR 7316, 2006</ac:link-body></ac:link> </p></li><li><p><ac:link ac:card-appearance="inline"><ri:page ri:space-key="BIB" ri:content-title="Sasaoka and Medeiros, 2006" ri:version-at-save="2" /><ac:link-body>Sasaoka and Medeiros, 2006</ac:link-body></ac:link></p></li></ul><h2>See Also</h2><ac:structured-macro ac:name="contentbylabel" ac:schema-version="4" data-layout="default" ac:macro-id="24029f0b-2e23-4855-a3e2-03d181a2aecc"><ac:parameter ac:name="showLabels">false</ac:parameter><ac:parameter ac:name="max">50</ac:parameter><ac:parameter ac:name="sort">title</ac:parameter><ac:parameter ac:name="cql">label = &quot;access-granularity&quot;</ac:parameter></ac:structured-macro>', 'representation': 'storage', 'embeddedContent': [], '_expandable': {'content': '/rest/api/content/1006632974'}}, '_expandable': {'editor': '', 'atlas_doc_format': '', 'view': '', 'export_view': '', 'styled_view': '', 'dynamic': '', 'editor2': '', 'anonymous_export_view': ''}}, 'extensions': {'position': 427865714}, '_expandable': {'childTypes': '', 'container': '/rest/api/space/DIC', 'metadata': '', 'operations': '', 'schedulePublishDate': '', 'children': '/rest/api/content/1006632974/child', 'restrictions': '/rest/api/content/1006632974/restriction/byOperation', 'history': '/rest/api/content/1006632974/history', 'ancestors': '', 'version': '', 'descendants': '/rest/api/content/1006632974/descendant', 'space': '/rest/api/space/DIC'}, '_links': {'editui': '/pages/resumedraft.action?draftId=1006632974', 'webui': '/spaces/DIC/pages/1006632974', 'context': '/wiki', 'self': 'https://open-measure.atlassian.net/wiki/rest/api/content/1006632974', 'tinyui': '/x/DgAAP', 'collection': '/rest/api/content', 'base': 'https://open-measure.atlassian.net/wiki'}}