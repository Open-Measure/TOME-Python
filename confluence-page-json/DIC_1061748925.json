{'id': '1061748925', 'type': 'page', 'status': 'current', 'title': 'Orphan Process (Dictionary Entry)', 'macroRenderedOutput': {}, 'body': {'storage': {'value': '<h1 style="text-align: center;"><strong><span style="color: rgb(76,154,255);">Orphan Process</span></strong></h1><h2>Alternative Forms</h2><ul><li><p>Orphan</p></li></ul><h2>Definitions</h2><h3>Definition 1 <code>Computer Science, Linux</code></h3><p>In Linux, a process whose parent is dead. An orphan process is automatically made a child of init.</p><h2>Related Terms</h2><ul><li><p>Linux</p></li><li><p><ac:link ac:card-appearance="inline"><ri:page ri:content-title="Orphan (Dictionary Entry)" ri:version-at-save="7" /><ac:link-body>Orphan (Dictionary Entry)</ac:link-body></ac:link> </p></li><li><p>Process</p></li><li><p>UNIX </p></li></ul><h2>Quotes</h2><blockquote><p>Before a process can be allowed to disappear completely, the kernel requires that<br />its death be acknowledged by the process&rsquo;s parent, which the parent does with a<br />call to wait. The parent receives a copy of the child&rsquo;s exit code (or an indication of<br />why the child was killed if the child did not exit voluntarily) and can also obtain a<br />summary of the child&rsquo;s use of resources if it wishes.</p><p>This scheme works fine if parents outlive their children and are conscientious<br />about calling wait so that dead processes can be disposed of. If the parent dies<br />first, however, the kernel recognizes that no wait will be forthcoming and adjusts<br />the process to make the orphan a child of init. init politely accepts these orphaned<br />processes and performs the wait needed to get rid of them when they die.</p></blockquote><p style="text-align: right;">(<ac:link ac:card-appearance="inline"><ri:page ri:space-key="BIB" ri:content-title="Nemeth et al., 2011" ri:version-at-save="2" /><ac:link-body>Nemeth et al., 2011</ac:link-body></ac:link>, p. 124)</p><h2>Bibliography</h2><ul><li><p><ac:link ac:card-appearance="inline"><ri:page ri:space-key="BIB" ri:content-title="Nemeth et al., 2011" ri:version-at-save="2" /><ac:link-body>Nemeth et al., 2011</ac:link-body></ac:link> </p></li></ul><h2>See Also</h2><ac:structured-macro ac:name="contentbylabel" ac:schema-version="4" data-layout="default" ac:macro-id="6fc84649-f119-437e-af34-357c09664238"><ac:parameter ac:name="cql">label = &quot;orphan-process&quot;</ac:parameter><ac:parameter ac:name="showLabels">false</ac:parameter><ac:parameter ac:name="sort">title</ac:parameter></ac:structured-macro>', 'representation': 'storage', 'embeddedContent': [], '_expandable': {'content': '/rest/api/content/1061748925'}}, '_expandable': {'editor': '', 'atlas_doc_format': '', 'view': '', 'export_view': '', 'styled_view': '', 'dynamic': '', 'editor2': '', 'anonymous_export_view': ''}}, 'extensions': {'position': 619838981}, '_expandable': {'childTypes': '', 'container': '/rest/api/space/DIC', 'metadata': '', 'operations': '', 'schedulePublishDate': '', 'children': '/rest/api/content/1061748925/child', 'restrictions': '/rest/api/content/1061748925/restriction/byOperation', 'history': '/rest/api/content/1061748925/history', 'ancestors': '', 'version': '', 'descendants': '/rest/api/content/1061748925/descendant', 'space': '/rest/api/space/DIC'}, '_links': {'editui': '/pages/resumedraft.action?draftId=1061748925', 'webui': '/spaces/DIC/pages/1061748925', 'context': '/wiki', 'self': 'https://open-measure.atlassian.net/wiki/rest/api/content/1061748925', 'tinyui': '/x/vQBJPw', 'collection': '/rest/api/content', 'base': 'https://open-measure.atlassian.net/wiki'}}